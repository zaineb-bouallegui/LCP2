// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package externaldatabaseconnector.actions;

import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaObject;
import com.mendix.webui.CustomJavaAction;
import externaldatabaseconnector.proxies.constants.Constants;
import externaldatabaseconnector.impl.JdbcConnector;
import java.util.List;

public class ExecuteQuery extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private final java.lang.String jdbcUrl;
	private final java.lang.String userName;
	private final java.lang.String password;
	private final java.lang.String sql;
	private final java.lang.String queryParameters;
	private final java.lang.String columnMapping;
	private final java.lang.String OutputEntity;

	public ExecuteQuery(
		IContext context,
		java.lang.String _jdbcUrl,
		java.lang.String _userName,
		java.lang.String _password,
		java.lang.String _sql,
		java.lang.String _queryParameters,
		java.lang.String _columnMapping,
		java.lang.String _outputEntity
	)
	{
		super(context);
		this.jdbcUrl = _jdbcUrl;
		this.userName = _userName;
		this.password = _password;
		this.sql = _sql;
		this.queryParameters = _queryParameters;
		this.columnMapping = _columnMapping;
		this.OutputEntity = _outputEntity;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		try{
        IMetaObject metaObject = Core.getMetaObject(this.OutputEntity);
        List<IMendixObject> resultList = connector.executeQuery(jdbcUrl, userName, password,
                metaObject, sql, queryParameters, columnMapping, this.getContext());
        if (logNode.isTraceEnabled()) logNode.trace(String.format("Result list count: %d", resultList.size()));

        return resultList;
		}catch(Exception exception){
			logNode.error(exception.getMessage(), exception);
			throw exception;
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ExecuteQuery";
	}

	// BEGIN EXTRA CODE
    private final ILogNode logNode = Core.getLogger(Constants.getLogNode());
    private final JdbcConnector connector = new JdbcConnector(logNode);
	// END EXTRA CODE
}
